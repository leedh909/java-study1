3/14(토)

*7-1 클래스의 정의와 인스턴스의 생성1
객체지향으로 프로그래밍하는건 무슨 의미냐(=목적이 있는 대화, 목적이 있는 행위)
(ex. 과일장수(과일(데이터=변수),판매행위(메소드))/구매자(돈, 구매행위) )

*7-1 클래스의 정의와 인스턴스의 생성2
객체(데이터와 상태 기능을 표시)
Class 정의(=틀을 만든다) -> 객체 만든다. 

*7-1 클래스의 정의와 인스턴스의 생성3
참조변수와 메소드의 관계는 같은 주소값을 가리킬수 있다.
(인스턴스=객체)
참조변수를 초기화하려면 null 값으로한다. 

*7-2 생성자(Constructor)
생성자=메소드
자바 인스턴스 생성시 생성자는 반드시 호출된다.
생성자 내에서는 final 멤버 변수의 초기화가 가능하다.
생성자가 없어도 인스턴스 생성이 가능한 이유는 자동으로 삽입되는 디폴트 생성자에 있다.

*7-3 자바의 이름 규칙(Naming Rule)
이름 붙일 것들(Class, 메소드, 변수, 상수,.......등)
Camel Case(대문자로 시작), 변형된 Camel Case(소문자로 시작), 상수는 전부대문자로

*8-1 클래스 패스(Class Path)의 지정
환경변수(Path)란 확장자가 exe인 실행파일을 찾는 경로를 의미함.
환경변수(classpath)란 확장자가 class인 클래스 파일을 찾는 경로를 의미함.
절대경로 : 위치에 상관없이 지정해주는 방식
상대경로 : 지금 위치에서 지정해주는 방식

*8-2 패키지(Package)의 이해
같은 이름의 클래스를 해결하는 방법. 패키지를 앞에다가 지정한다.
패키지를 만드는 방법(package orange.area;) 라고 선언한다.(이 클래스는 무슨 패키지로 묶겠다.)
import선언=패키지선언은 비슷하다.

*9-1 정보은닉(Information Hiding)
정보은닉 ex)자판기
캡슐화 ex)계산기
private로 선언하면 접근제어할 수 있다.

*9-2 접근제어 지시자(Access Control Specifiers)
public > protected > default > private
클래스 형태로 접근 제어 관계를 파악하라.

*9-3 public 클래스와 default 클래스
public 클래스가 왜 나왔느냐. ( 주된(main) 클래스를 표시하기 위해서, 다른 클래스는 default 클래스로 public 클래스를 보조해준다. )
생성자나 클래스는 제한이 더 작은 값으로 수렴한다.(public, default)
대부분 클래스에 맞게 생성자를 제한한다.

*9-4 어떤 클래스를 public으로 선언할까요?
내가 공유하고 싶은 생성자를 public으로 선언한다.

*9-5 캡슐화(Encapsulation)
캡슐화는 관련 있는 모든 메소드와 변수를 하나의 클래스로 묶는 것.

