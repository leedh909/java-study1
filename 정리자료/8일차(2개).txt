3/26(목)


*22-3 Set 인터페이스를 구현하는 컬렉션 클래스들1
HashSet<E>
클래스들은 데이터의 중복저장을 허용하지 않는다. 단, 동일 데이터에 대한 기준은 프로그래머가 정의
Object클래스에 정의되어 있는 equals 메소드의 호출결과와 HasCode메소드의 호출결과를 참조하여 인스턴스의 동등비교를 진행
List<E>에서 기본 자료형은 동등비교하면 같은 인스턴스로 판단하지만 클래스의 인스턴스를 정의할때는 다른 자료형으로 본다.
-->(같은 조건으로 비교하고 싶으면 equals를 이용하여 판단하게한다.)
해시 알고리즘은 해시값으로 분류하고 해시 값에 해당하는 부류에서만 존재 유무를 확인하면 된다.
HashSet<E> 클래스의 동등비교 
->Object클래스의 hashCode메소드의 반환 값을 해시 값으로 활용하여 검색의 그룹을 선택한다.
->그룹 내의 인스턴스를 대상으로 Object클래스의 equals메소드의 반환 값을 이용해서 동등비교

*22-3 Set 인터페이스를 구현하는 컬렉션 클래스들2
TreeSet<E> 클래스는 트리라는 자료구조를 기반으로 데이터를 저장한다.
->정렬된 순서로 저장하며, 데이터의 중복저장하지 않는다.->둘 다 사용자가 정의해줘야한다.
내부적으로 데이터의 값을 비교해서 정렬되어 저장된다.
TreeSet<E>인스턴스에 저장이 되려면 Comparable<T>인터페이스를 구현해야한다.
Comparable<T>인터페이스의 유일한 메소드는 int compareTo(T obj);이다.
Person 클래스의 compareTo메소드는 정렬의 기준을 '나이의 많고 적음'으로 구현하였다.
